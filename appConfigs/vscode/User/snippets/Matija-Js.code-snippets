{
  // *** Shebang ***

  "node shebang": {
    "scope": "javascript",
    "prefix": "#!",
    "body": ["#!/usr/bin/env node\n"],
    "description": "node shebang"
  },
  "ts shebang": {
    "scope": "typescript",
    "prefix": "#!",
    "body": ["#!/opt/tst\n"],
    "description": "ts-node shebang"
  },

  // *** Log ***
  "Matija-log": {
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "prefix": ["log"],
    "body": ["console.log($0);"],
    "description": "Quick console.log(_)"
  },
  "Matija-log-x1": {
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "prefix": ["lx1"],
    "body": ["console.log(`$*$ log `,{$0 }); //T*DO"],
    "description": "Quick console.log(_) for debugging"
  },
  "Matija-log-x2": {
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "prefix": ["lx2"],
    // https://stackoverflow.com/questions/41856706/whats-the-best-way-to-write-multi-line-code-snippets-in-vs-code
    "body": [
      "// eslint-disable-next-line no-console",
      "console.log(`$*$ log `,{$0 }); //T*DO"
    ],
    "description": "Quick console.log(_) that doesn't trigger eslint error"
  },
  "Matija-log-x3-winston": {
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "prefix": ["lx3"],
    "body": [
      "// eslint-disable-next-line no-console",
      "console.log(`VVVVV\\n\\n`,",
      "{ ts: new Date(), msg: `log `,$0 }, ",
      "`\\n\\nΛΛΛΛΛ`); //T*DO"
    ],
    "description": "Insert console.log() between noisy winston logs"
  },

  // *** Trace ***

  "Matija-trace-1": {
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "prefix": ["tr1"],
    "body": [
      "// eslint-disable-next-line no-console",
      "console.trace(`$*$ trace `,{$0 }); //T*DO"
    ],
    "description": "Quick console.trace(_) that doesn't trigger eslint error"
  },

  // *** Time ***

  "Matija-time-1": {
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "prefix": ["tm1"],
    "body": [
      "// eslint-disable-next-line no-console",
      "console.time('$*$ time $0'); //T*DO",
      "// eslint-disable-next-line no-console",
      "console.timeEnd('$*$ time $0'); //T*DO"
    ],
    "description": "Quick time command that doesn't trigger eslint error"
  },
  "Matija-time-2": {
    // https://stackoverflow.com/questions/313893/how-to-measure-time-taken-by-a-function-to-execute
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "prefix": ["tm2"],
    "body": [
      "let startTime = performance.now();",
      "let endTime = performance.now();",
      "console.log(`Time $0 : ${endTime - startTime} milliseconds`);"
    ],
    "description": "Perf timing"
  },
  // *** Debugger ***

  "Matija-debug-1": {
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "prefix": ["deb1"],
    "body": ["// eslint-disable-next-line no-debugger", "debugger; //T*DO$0"],
    "description": "Quick debugger command that doesn't trigger eslint error"
  }
}
